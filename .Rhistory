library(ggmap)
library(maps)
library(ggplot2)
statesMap = map_data("state")
str(statesMap)
table(statesMap$group)
ggplot(statesMap,aes(x=long,y=lat,group=group))+geom_polygon(fill="white",color="black")
ggplot(statesMap,aes(x=long,y=lat,group=group))+geom_polygon(fill="white",color="red")
ggplot(statesMap,aes(x=long,y=lat,group=group))+geom_polygon(fill="white",color="black")
polling=read.csv("PollingImputed.csv")
str(polling)
Train=subset(polling,Year>=2004 & Year<=2008)
Tset=subset(polling,Year>=2012)
Test=subset(polling,Year>=2012)
View(Tset)
rm(Tset)
mod2 = glm(Republican~SurveyUSA+DiffCount, data=Train, family="binomial")
TestPrediction = predict(mod2, newdata=Test, type="response")
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
str(TestPredictionBinary)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
table(Test$Republican,TestPredictionBinary)
summary(TestPrediction)
table(TestPredictionBinary)
predictionDataFrame$region = tolower(predictionDataFrame$Test.State)
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
predictionMap = predictionMap[order(predictionMap$order),]
str(predictionDataFrame)
str(predictionMap)
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black")
table(TestPredictionBinary)
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
predictionDataFrame
?geom_polygon
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = 3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black",size=3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black",border=3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black",alpha=3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black",linetype=3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black",alpha=0.3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
str(predictionDataFrame)
predictionDataFrame
users=read.csv("users.csv")
edges=read.csv("edges.csv")
str(users)
summary(edges)
head(edges)
tapply(edges$V2,edges$v1,nrow)
table(edges$V2,edges$v1)
table(edges$V2)
table(edges$V1)
mean(table(edges$V1))
mean(table(edges$V2))
3.65+3.47619
(3.65+3.47619)/2
sum(table(edges$V1))
146/40
sum(table(edges$V2))
table(users$school)
table(users$locale, users$school)
install.packages("igraph")
library(igraph)
g = graph.data.frame(edges, FALSE, users)
plot(g, vertex.size=5, vertex.label=NA)
degree(g)
mean(degree(g))
sort(degree(g))
V(g)$size = degree(g)/2+2
plot(g, vertex.label=NA)
size(g)
V(g)$color = "black"
V(g)$color[V(g)$gender == "A"] = "red"
V(g)$color[V(g)$gender == "B"] = "gray"
plot(g, vertex.label=NA)
V(g)$color[4030]
V(g)$color[4032]
V(g)$color[3985]
V(g)$color[4009]
V(g)$color
V(g)$color[V(g)$school == "A"] = "red"
V(g)$color[V(g)$school == "B"] = "gray"
V(g)$color[V(g)$school == "AB"] = "brown"
plot(g, vertex.label=NA)
V(g)$color[V(g)$school == "AB"] = "blue"
plot(g, vertex.label=NA)
table(users$locale)
V(g)$color[V(g)$locale == "A"] = "red"
V(g)$color[V(g)$locale == "B"] = "gray"
plot(g, vertex.label=NA)
?igraph.plotting
