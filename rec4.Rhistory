find.package("devtools")
install.packages("devtools")
library(devtools)
library(devtools)
library(devtools)
clear
library(devtools)
library(devtools)
find_rtools()
library(devtools)
library(devtools)
find_rtools()
library(devtools)
install packages("swirl")
install package("swirl")
install.packages("swirl")
library(swirl)
swirl()
ls()
m<-matrix(nrow=2,ncol=3)
m
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/mat.r')
dim(m)
atrribute(m)
atrributes(m)
attributes(m)
m<-matrix(1:6,nrow=3,ncol=4)
m
m<-matrix(1:6,nrow=3,ncol=3)
m
m<-matrix(1:10,nrow=3,ncol=3)
m<-matrix(1:12,nrow=3,ncol=3)
m
m<-1:10
dim(2,2)
m
m<-1:10
dim(m)<-c(2,2)
m
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/mat.r')
m<-1:10
dim(m)<-c(5,2)
m
m<-1:10
dim(m)<-c(5,2)
m
dim(m)<-c(2,5)
m
x<-1:3
y<-2:5
m<-cbind(x,y)
y<-2:4
m<-cbind(x,y)
m
m<-rbind(x,y)
m
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/fact.r')
fact<-factor(c("yes","no","yes","yes","no"))
fact
table(fact)
unclass(fact)
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/fact.r')
fact<-factor(c("yes","no","yes","yes","no")),
levels=c("yes","no")
fact
table(fact)
unclass(fact)
fact
levels=c("yes","no")
fact
fact<-factor(c("yes","no","yes","yes","no"),
levels=c("yes","no"))
fact
table(fact)
unclass(fact)
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/fact.r')
unclass(fact)
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/miss_values.r')
x<-c(1,2,NA,5,9)
x
x<-c(1,2,NA,5,9)
x
is.na(x)
x<-c(1,2,NA,5,9)
x
is.na(x)
is.nan(x)
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/miss_values.r')
x<-c(1,2,NA,NAN,9)
x
is.na(x)
is.nan(x)
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/miss_values.r')
x<-c(1,2,NA,NaN,9)
x
is.na(x)
is.nan(x)
f<-data.frame(foo=1:10,bar = c(T,F,T,T))
f
source('F:/sanjana/books/CSE/Machine Learning/Coursera/R programming/Homework/frame.r')
f<-data.frame(foo=1:4,bar = c(T,F,T,T))
f
nroe(f)
nroe(f)
nrow(f)
ncol(f)
a<-1:3
names(a)
a<-1:3
names(a)<-c("foo","bar","daks")
a
names(a)
x<-list(a=1,b=2,c=3)
x
m<-matrix(1:4,nrow=2,ncol=2)
dimnames(m)<-list(c("a","b"),c("c","d")) ##list(row names,column names)
m
data<-read.table("foo.txt")
which.min(1,5,0,2)
which.min(c(1,5,0,2))
install.packages("zoo")
library(zoo)
setwd("F:/sanjana/books/CSE/Machine Learning/EdX/The Analytics Edge/Homework")
load("F:/sanjana/books/CSE/Machine Learning/EdX/The Analytics Edge/Homework/.RData")
boston=read.csv("boston.csv")
str(boston)
plot(boston$LON,boston$LAT)
points(boston$LON[boston$CHAS==1]
,boston$LAT[boston$CHAS==1],col="blue",pch=19)
points(boston$LON[boston$TRACT==3531],boston$LAT[boston$TRACT==1],col="red",pch=19)
summary(boston$NOX)
points(boston$LON[boston$NOX>0.55],boston$LAT[boston$NOX>0.55],col="green",pch=19)
plot(boston$LON,boston$LAT)
summary(boston$MEDV)
points(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
plot(boston$LAT,boston$MEDV)
plot(boston$LON,boston$MEDV)
plot(boston$LAT,boston$MEDV)
plot(boston$LON,boston$MEDV)
linear=lm(MEDV~LON+LAT,data=boston)
summary(linear)
plot(boston$LON,boston$LAT)
points(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
plot(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
points(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
plot(boston$LON,boston$LAT)
points(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
linear$fitted.values
points(boston$LON[linear$fitted.values>21.20],boston$LATlinear$fitted.values>21.20],col="blue",pch=$)
points(boston$LON[linear$fitted.values>21.20],boston$LATlinear$fitted.values>21.20],col="blue",pch="$")
points(boston$LON[linear$fitted.values>21.20],linear$fitted.values>21.20],col="blue",pch="$")
points(boston$LON[linear$fitted.values>21.20],linear$fitted.values>21.20],col="blue",pch=$)
points(boston$LON[linear$fitted.values>21.20],boston$LAT[linear$fitted.values>21.20],col="blue",pch="$")
library(rpart)
library(rpart.plot)
tree=rpart(MEDV~LAT+LON,data=boston)
prp(tree)
plot(boston$LON,boston$LAT)
points(boston$LON[boston$MEDV>21.20],boston$LAT[boston$MEDV>21.20],col="green",pch=19)
fittedvalues=predict(tree)
points(boston$LON[fitted.values>21.20],boston$LAT[fitted.values>21.20],col="blue",pch=$)
points(boston$LON[fitted.values>21.20],boston$LAT[fitted.values>21.20],col="blue",pch="$")
points(boston$LON[fittedvalues>21.20],boston$LAT[fittedvalues>21.20],col="blue",pch="$")
save.image("F:/sanjana/books/CSE/Machine Learning/EdX/The Analytics Edge/Homework/rec4.RData")
savehistory("F:/sanjana/books/CSE/Machine Learning/EdX/The Analytics Edge/Homework/rec4.Rhistory")
